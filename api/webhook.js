import menuData from './menuData.js';
import { OpenAI } from 'openai';

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export default async function handler(req, res) {
  const twilio = await import('twilio');
  const MessagingResponse = twilio.default.twiml.MessagingResponse;

  const twiml = new MessagingResponse();
  const message = req.body.Body || '';
  const lowerMessage = message.toLowerCase().trim();

  // Saludo inteligente seg√∫n la hora
  const now = new Date();
  const hora = now.getHours();
  let saludo = '¬°Buenas tardes!';
  if (hora < 13) saludo = '¬°Buen d√≠a!';
  else if (hora >= 20) saludo = '¬°Buenas noches!';

  // Inicio con botones
  if (['hola', 'buenas', 'buen d√≠a', 'buenas tardes', 'buenas noches'].some(txt => lowerMessage.includes(txt))) {
    twiml.message(`${saludo} ¬øQuer√©s ver el men√∫ o ya sab√©s qu√© pedir?\n\nüëâ Ver men√∫\nüëâ Quiero hacer un pedido`);
    return res.status(200).send(twiml.toString());
  }

  // Procesamiento con inteligencia artificial real
  try {
    const completion = await openai.chat.completions.create({
      model: 'gpt-4',
      messages: [
        {
          role: 'system',
          content: `Sos un asistente de una pizzer√≠a llamada Knock Out. Respond√© como un humano, con buena onda, pero sin exagerar. 
          Us√° esta base de datos como referencia para responder precios, aclaraciones, ingredientes y tama√±os: ${JSON.stringify(menuData)}.
          Si alguien pide una empanada de carne, pregunt√° si la quiere picada o a cuchillo.
          Si pide 12 empanadas, cobrales $20000 en total. Si pide menos, es $1800 cada una. Nunca aclares esto si no lo preguntan.
          Siempre que alguien haga un pedido, pregunt√°: "¬øQuer√©s agregar algo m√°s al pedido?" y mostr√° botones S√≠ / No.
          Si preguntan por pizzas, mand√° la imagen del men√∫ de pizzas.
          Si preguntan por milanesas, tartas, tortillas, empanadas o canastitas, mand√° la otra imagen.
          Respond√© de forma flexible ante errores ortogr√°ficos, may√∫sculas y signos. Us√° el mismo estilo que el cliente.
          Siempre respond√© en espa√±ol.`
        },
        {
          role: 'user',
          content: message,
        }
      ],
      temperature: 0.6,
    });

    const aiReply = completion.choices[0].message.content;
    twiml.message(aiReply);
    return res.status(200).send(twiml.toString());

  } catch (error) {
    console.error('Error con OpenAI:', error);
    twiml.message('Perdon√°, tuve un problema para procesar tu mensaje. ¬øPod√©s repetirlo?');
    return res.status(200).send(twiml.toString());
  }
}
